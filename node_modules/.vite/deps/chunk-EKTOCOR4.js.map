{
  "version": 3,
  "sources": ["../../svelte-typewriter/helpers/getLettersTimeout.js", "../../svelte-typewriter/helpers/getRandomLetter.js", "../../svelte-typewriter/modes/scramble.js"],
  "sourcesContent": ["import { rng } from './rng'\n\n// returns a array with a timeout (in ms) for each letter of the word\nexport const getLettersTimeout = (textLetters, timeout) => {\n\tconst minimumTimeoutPossible = timeout / 3\n\t// TODO: find a better way to deal with this instead of explicitly reducing the maximum timeout\n\t// otherwise, at the end of the animation, one or two characters remain scrambled\n\tconst lettersTimeout = textLetters.map(() => rng(minimumTimeoutPossible, timeout - 100))\n\treturn lettersTimeout\n}\n", "import { rng } from './rng'\n\nexport const getRandomLetter = () => {\n\tconst possibleLetters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'.split(\n\t\t''\n\t)\n\tconst letterIndexLimit = possibleLetters.length\n\tconst randomLetterIndex = rng(0, letterIndexLimit)\n\tconst randomLetter = possibleLetters[randomLetterIndex]\n\treturn randomLetter\n}\n", "import { getLettersTimeout } from '../helpers/getLettersTimeout'\nimport { getRandomLetter } from '../helpers/getRandomLetter'\nimport { rng } from '../helpers/rng'\nimport { sleep } from '../helpers/sleep'\nimport { runOnEveryParentUntil } from '../helpers/runOnEveryParentUntil'\nimport { animationSetup } from '../helpers/animationSetup'\n\n/** @type {TypewriterModeFn} */\nconst scramble = async (node, props) => {\n\tconst { options, elements } = animationSetup(node, props)\n\n\tconst timeout = options.scrambleDuration\n\n\tawait new Promise(resolve => {\n\t\telements.forEach(async ({ currentNode, text }) => {\n\t\t\tlet wordLetters = text.split('')\n\t\t\tconst lettersTimeout = getLettersTimeout(wordLetters, timeout)\n\t\t\tconst startingTime = Date.now()\n\n\t\t\trunOnEveryParentUntil(currentNode, options.parentElement, element => {\n\t\t\t\telement.classList.add('finished-typing')\n\t\t\t})\n\n\t\t\twhile (Date.now() - startingTime < timeout) {\n\t\t\t\tconst randomLetterIndex = rng(0, wordLetters.length)\n\t\t\t\tconst randomLetterTimeout = lettersTimeout[randomLetterIndex]\n\t\t\t\tconst isRandomLetterWhitespace = wordLetters[randomLetterIndex] === ' '\n\t\t\t\tconst timeEllapsed = () => Date.now() - startingTime\n\t\t\t\tconst didRandomLetterReachTimeout = () => timeEllapsed() >= randomLetterTimeout\n\n\t\t\t\tif (didRandomLetterReachTimeout() || isRandomLetterWhitespace) {\n\t\t\t\t\tconst letterFinishedAnimation =\n\t\t\t\t\t\twordLetters[randomLetterIndex] === text[randomLetterIndex]\n\n\t\t\t\t\tif (!letterFinishedAnimation)\n\t\t\t\t\t\twordLetters[randomLetterIndex] = text[randomLetterIndex]\n\t\t\t\t\telse continue\n\t\t\t\t} else {\n\t\t\t\t\twordLetters[randomLetterIndex] = getRandomLetter()\n\t\t\t\t}\n\n\t\t\t\tconst scrambledText = wordLetters.join('')\n\t\t\t\tcurrentNode.innerHTML = scrambledText\n\n\t\t\t\tconst finishedScrambling = scrambledText === text\n\n\t\t\t\tconst letterInterval = options.scrambleSlowdown\n\t\t\t\t\t? Math.round(timeEllapsed() / 100)\n\t\t\t\t\t: 1\n\n\t\t\t\tawait sleep(letterInterval)\n\n\t\t\t\tif (finishedScrambling) {\n\t\t\t\t\tresolve()\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurrentNode.innerHTML = text\n\t\t})\n\t})\n\toptions.dispatch('done')\n}\n\nexport default scramble\n"],
  "mappings": ";;;;;;;;AAGO,IAAM,oBAAoB,CAAC,aAAa,YAAY;AAC1D,QAAM,yBAAyB,UAAU;AAGzC,QAAM,iBAAiB,YAAY,IAAI,MAAM,IAAI,wBAAwB,UAAU,GAAG,CAAC;AACvF,SAAO;AACR;;;ACPO,IAAM,kBAAkB,MAAM;AACpC,QAAM,kBAAkB,iEAAiE;AAAA,IACxF;AAAA,EACD;AACA,QAAM,mBAAmB,gBAAgB;AACzC,QAAM,oBAAoB,IAAI,GAAG,gBAAgB;AACjD,QAAM,eAAe,gBAAgB;AACrC,SAAO;AACR;;;ACFA,IAAM,WAAW,OAAO,MAAM,UAAU;AACvC,QAAM,EAAE,SAAS,SAAS,IAAI,eAAe,MAAM,KAAK;AAExD,QAAM,UAAU,QAAQ;AAExB,QAAM,IAAI,QAAQ,aAAW;AAC5B,aAAS,QAAQ,OAAO,EAAE,aAAa,KAAK,MAAM;AACjD,UAAI,cAAc,KAAK,MAAM,EAAE;AAC/B,YAAM,iBAAiB,kBAAkB,aAAa,OAAO;AAC7D,YAAM,eAAe,KAAK,IAAI;AAE9B,4BAAsB,aAAa,QAAQ,eAAe,aAAW;AACpE,gBAAQ,UAAU,IAAI,iBAAiB;AAAA,MACxC,CAAC;AAED,aAAO,KAAK,IAAI,IAAI,eAAe,SAAS;AAC3C,cAAM,oBAAoB,IAAI,GAAG,YAAY,MAAM;AACnD,cAAM,sBAAsB,eAAe;AAC3C,cAAM,2BAA2B,YAAY,uBAAuB;AACpE,cAAM,eAAe,MAAM,KAAK,IAAI,IAAI;AACxC,cAAM,8BAA8B,MAAM,aAAa,KAAK;AAE5D,YAAI,4BAA4B,KAAK,0BAA0B;AAC9D,gBAAM,0BACL,YAAY,uBAAuB,KAAK;AAEzC,cAAI,CAAC;AACJ,wBAAY,qBAAqB,KAAK;AAAA;AAClC;AAAA,QACN,OAAO;AACN,sBAAY,qBAAqB,gBAAgB;AAAA,QAClD;AAEA,cAAM,gBAAgB,YAAY,KAAK,EAAE;AACzC,oBAAY,YAAY;AAExB,cAAM,qBAAqB,kBAAkB;AAE7C,cAAM,iBAAiB,QAAQ,mBAC5B,KAAK,MAAM,aAAa,IAAI,GAAG,IAC/B;AAEH,cAAM,MAAM,cAAc;AAE1B,YAAI,oBAAoB;AACvB,kBAAQ;AACR;AAAA,QACD;AAAA,MACD;AAEA,kBAAY,YAAY;AAAA,IACzB,CAAC;AAAA,EACF,CAAC;AACD,UAAQ,SAAS,MAAM;AACxB;AAEA,IAAO,mBAAQ;",
  "names": []
}
